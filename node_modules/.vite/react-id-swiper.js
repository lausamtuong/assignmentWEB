import {
  init_swiper_esm,
  swiper_esm_exports
} from "./chunk-UX2ZEOHC.js";
import {
  require_object_assign,
  require_react
} from "./chunk-5SNZ7MUH.js";
import {
  __commonJS
} from "./chunk-JSLGV3TO.js";

// node_modules/react-id-swiper/lib/utils.js
var require_utils = __commonJS({
  "node_modules/react-id-swiper/lib/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.setRef = exports.isModuleAvailable = exports.isReactElement = exports.validateChildren = exports.classNames = void 0;
    var react_1 = require_react();
    exports.classNames = function(el) {
      if (typeof el === "string") {
        return el.split(".").join(" ").trim();
      } else if (el instanceof HTMLElement) {
        return el.className;
      }
      return "";
    };
    exports.validateChildren = function(children) {
      var isValid = true;
      if (Array.isArray(children)) {
        react_1.Children.forEach(children, function(child) {
          if (!react_1.isValidElement(child)) {
            isValid = false;
          }
        });
      } else {
        isValid = react_1.isValidElement(children);
      }
      return isValid;
    };
    exports.isReactElement = function(element) {
      return react_1.isValidElement(element) && (typeof element.type === "string" || typeof element.type === "function" || typeof element.type === "object");
    };
    exports.isModuleAvailable = function(modules, moduleName) {
      var moduleAvailable = false;
      for (var i = 0; i < modules.length; i++) {
        if (modules[i].name === moduleName) {
          moduleAvailable = true;
          break;
        }
      }
      return moduleAvailable;
    };
    exports.setRef = function(ref, value) {
      if (typeof ref === "function") {
        ref(value);
      } else if (ref) {
        ref.current = value;
      }
    };
  }
});

// node_modules/react-id-swiper/lib/hooks.js
var require_hooks = __commonJS({
  "node_modules/react-id-swiper/lib/hooks.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useForkRef = void 0;
    var react_1 = require_react();
    var utils_1 = require_utils();
    exports.useForkRef = function(refA, refB) {
      return react_1.useMemo(function() {
        if (refA == null && refB == null) {
          return null;
        }
        return function(refValue) {
          utils_1.setRef(refA, refValue);
          utils_1.setRef(refB, refValue);
        };
      }, [refA, refB]);
    };
  }
});

// node_modules/react-id-swiper/lib/ReactIdSwiper.js
var require_ReactIdSwiper = __commonJS({
  "node_modules/react-id-swiper/lib/ReactIdSwiper.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m[k];
      } });
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var react_1 = __importStar(require_react());
    var swiper_1 = __importDefault((init_swiper_esm(), swiper_esm_exports));
    var object_assign_1 = __importDefault(require_object_assign());
    var utils_1 = require_utils();
    var hooks_1 = require_hooks();
    var ReactIdSwiper = react_1.forwardRef(function(props, externalRef) {
      var activeSlideKey = props.activeSlideKey, ContainerEl = props.ContainerEl, children = props.children, containerClass = props.containerClass, navigation = props.navigation, noSwiping = props.noSwiping, pagination = props.pagination, parallax = props.parallax, parallaxEl = props.parallaxEl, WrapperEl = props.WrapperEl, wrapperClass = props.wrapperClass, rebuildOnUpdate = props.rebuildOnUpdate, renderScrollbar = props.renderScrollbar, renderPagination = props.renderPagination, renderPrevButton = props.renderPrevButton, renderNextButton = props.renderNextButton, renderParallax = props.renderParallax, rtl = props.rtl, scrollbar = props.scrollbar, shouldSwiperUpdate = props.shouldSwiperUpdate, slideClass = props.slideClass, loop = props.loop;
      var swiperInstanceRef = react_1.useRef(null);
      var swiperNodeRef = react_1.useRef(null);
      var ref = hooks_1.useForkRef(swiperNodeRef, externalRef);
      var getActiveSlideIndexFromProps = react_1.useCallback(function() {
        if (!activeSlideKey) {
          return null;
        }
        var activeSlideId = 0;
        var id = loop ? 1 : 0;
        react_1.Children.forEach(children, function(child) {
          if (react_1.isValidElement(child)) {
            if (child.key === activeSlideKey) {
              activeSlideId = id;
            }
            id += 1;
          }
        });
        return activeSlideId;
      }, [activeSlideKey, children, loop]);
      var destroySwiper = react_1.useCallback(function() {
        if (swiperInstanceRef.current !== null) {
          swiperInstanceRef.current.destroy(true, true);
          utils_1.setRef(swiperInstanceRef, null);
        }
      }, []);
      var buildSwiper = react_1.useCallback(function() {
        if (swiperNodeRef.current && swiperInstanceRef.current === null) {
          utils_1.setRef(swiperInstanceRef, new swiper_1.default(swiperNodeRef.current, object_assign_1.default({}, props)));
        }
      }, [props]);
      var renderContent = function(e) {
        if (!utils_1.isReactElement(e)) {
          return null;
        }
        var slideClassNames = [slideClass, e.props.className];
        if (noSwiping) {
          slideClassNames.push("swiper-no-swiping");
        }
        return react_1.cloneElement(e, __assign(__assign({}, e.props), { className: slideClassNames.join(" ").trim() }));
      };
      react_1.useEffect(function() {
        return function() {
          return destroySwiper();
        };
      }, [destroySwiper]);
      react_1.useEffect(function() {
        buildSwiper();
        if (swiperInstanceRef.current !== null) {
          if (rebuildOnUpdate) {
            destroySwiper();
            buildSwiper();
          } else if (shouldSwiperUpdate) {
            swiperInstanceRef.current.update();
          }
          var numSlides = swiperInstanceRef.current.slides.length;
          if (numSlides <= swiperInstanceRef.current.activeIndex) {
            var index = Math.max(numSlides - 1, 0);
            swiperInstanceRef.current.slideTo(index);
          }
          var slideToIndex = getActiveSlideIndexFromProps();
          if (slideToIndex !== null) {
            swiperInstanceRef.current.slideTo(slideToIndex);
          }
        }
      }, [
        destroySwiper,
        getActiveSlideIndexFromProps,
        rebuildOnUpdate,
        shouldSwiperUpdate,
        buildSwiper
      ]);
      if (!children || !ContainerEl || !WrapperEl) {
        return null;
      }
      if (!utils_1.validateChildren(children)) {
        if (true) {
          console.warn("Children should be react element or an array of react element!!");
        }
        return null;
      }
      return react_1.default.createElement(ContainerEl, { className: containerClass, dir: rtl && "rtl", ref }, parallax && parallaxEl && renderParallax && renderParallax(props), react_1.default.createElement(WrapperEl, { className: wrapperClass }, react_1.Children.map(children, renderContent)), pagination && pagination.el && renderPagination && renderPagination(props), scrollbar && scrollbar.el && renderScrollbar && renderScrollbar(props), navigation && navigation.nextEl && renderNextButton && renderNextButton(props), navigation && navigation.prevEl && renderPrevButton && renderPrevButton(props));
    });
    ReactIdSwiper.defaultProps = {
      containerClass: "swiper-container",
      wrapperClass: "swiper-wrapper",
      slideClass: "swiper-slide",
      ContainerEl: "div",
      WrapperEl: "div",
      renderScrollbar: function(_a) {
        var scrollbar = _a.scrollbar;
        return scrollbar ? react_1.default.createElement("div", { className: utils_1.classNames(scrollbar.el) }) : null;
      },
      renderPagination: function(_a) {
        var pagination = _a.pagination;
        return pagination ? react_1.default.createElement("div", { className: utils_1.classNames(pagination.el) }) : null;
      },
      renderPrevButton: function(_a) {
        var navigation = _a.navigation;
        return navigation ? react_1.default.createElement("div", { className: utils_1.classNames(navigation.prevEl) }) : null;
      },
      renderNextButton: function(_a) {
        var navigation = _a.navigation;
        return navigation ? react_1.default.createElement("div", { className: utils_1.classNames(navigation.nextEl) }) : null;
      },
      renderParallax: function(_a) {
        var parallaxEl = _a.parallaxEl;
        return parallaxEl ? react_1.default.createElement("div", { className: utils_1.classNames(parallaxEl.el), "data-swiper-parallax": parallaxEl.value }) : null;
      }
    };
    ReactIdSwiper.displayName = "ReactIdSwiper";
    exports.default = ReactIdSwiper;
  }
});

// node_modules/react-id-swiper/lib/index.js
var require_lib = __commonJS({
  "node_modules/react-id-swiper/lib/index.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var ReactIdSwiper_1 = __importDefault(require_ReactIdSwiper());
    exports.default = ReactIdSwiper_1.default;
  }
});

// dep:react-id-swiper
var react_id_swiper_default = require_lib();
export {
  react_id_swiper_default as default
};
//# sourceMappingURL=react-id-swiper.js.map
